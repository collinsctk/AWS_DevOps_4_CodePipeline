AWSTemplateFormatVersion: "2010-09-09"
Description: Qytang AWS DevOps CodePipeLine

Mappings:
    AWSInstanceType2Arch:
        t2.micro:
            Arch: HVMG2
        t2.nano:
            Arch: HVMG2
    AWSRegionArch2AMI:
        ap-northeast-2:
            HVMG2: ami-03461b78fdba0ff9d
        ap-southeast-2:
            HVMG2: ami-088ff0e3bde7b3fdf
        us-east-1:
            HVMG2: ami-04d29b6f966df1537

Resources:
    ########################## VPC PART ##########################
    CFInternetGW:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags:
                -   Key: Name
                    Value: CFInternetGW

    CFVPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: 10.2.0.0/16
            EnableDnsHostnames: true
            EnableDnsSupport: true
            Tags:
                -   Key: Name
                    Value: CFVPC

    AttachGW:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            VpcId: !Ref CFVPC
            InternetGatewayId: !Ref CFInternetGW

    OutsideNet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone:
                "Fn::Select":
                    - 0
                    -   "Fn::GetAZs": ""
            CidrBlock: 10.2.11.0/24
            MapPublicIpOnLaunch: true
            Tags:
                -   Key: Name
                    Value: Outside-Net
            VpcId: !Ref CFVPC

    OutsideRouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref CFVPC
            Tags:
                -   Key: Name
                    Value: Outside_Route_Table

    OutsideNetAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref OutsideRouteTable
            SubnetId: !Ref OutsideNet

    OutsideDefaultRoute:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref CFInternetGW
            RouteTableId: !Ref OutsideRouteTable

    InstanceSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: Allow tcp/80 and tcp/22
            VpcId: !Ref CFVPC
            SecurityGroupIngress:
                -   IpProtocol: tcp
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: tcp
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0

    ########################## EC2 PART ##########################
    WebServiceRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -   Effect: "Allow"
                        Principal:
                            Service:
                                - "ec2.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            Path: "/"
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
                - arn:aws:iam::aws:policy/AmazonS3FullAccess
                - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
                - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
                - arn:aws:iam::aws:policy/AmazonSSMFullAccess

    WebService:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: /
            Roles:
                - !Ref WebServiceRole

    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            InstanceType: t2.micro
            Tags:
                -   Key: Name
                    Value: QYT_AWS_DevOps
            KeyName: us-key
            #      KeyName: new-aws
            UserData:
                "Fn::Base64":
                    "Fn::Join":
                        - ""
                        -   - "#!/bin/bash\n"
                            - "yum install ruby -y\n"
                            - "aws s3 cp s3://aws-codedeploy-ap-northeast-2/latest/install . --region "
                            - !Ref AWS::Region
                            - "\n"
                            - "chmod +x install\n"
                            - "./install auto\n"

            IamInstanceProfile: !Ref WebService
            NetworkInterfaces:
                -   NetworkInterfaceId: !Ref NetworkInterface
                    DeviceIndex: 0
            ImageId:
                "Fn::FindInMap":
                    - "AWSRegionArch2AMI"
                    - !Ref AWS::Region
                    -   "Fn::FindInMap":
                            - AWSInstanceType2Arch
                            - t2.micro
                            - Arch

    NetworkInterface:
        Type: "AWS::EC2::NetworkInterface"
        Properties:
            GroupSet:
                - !Ref InstanceSecurityGroup
            SubnetId: !Ref OutsideNet

    myDNSRecord: # DNS记录
        Type: "AWS::Route53::RecordSet"
        Properties:
            HostedZoneId: Z1JOS2YODO11W5 # Zone的ID
            Comment: DNS name for my instance.
            Name: codepipeline.mingjiao.org. # 域名
            Type: A # A记录
            TTL: 30 # TTL超时时间
            ResourceRecords: [!GetAtt EC2Instance.PublicIp]

    ########################## Deploy Group ##########################
    DeployRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -   Effect: "Allow"
                        Principal:
                            Service:
                                - "codedeploy.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            Path: "/"
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

    DeployAPP:
        Type: AWS::CodeDeploy::Application
        Properties:
            ApplicationName: qytang_aws_flask_app
            ComputePlatform: Server # EC2/On-premises

    DeployGroup:
        Type: AWS::CodeDeploy::DeploymentGroup
        Properties:
            ApplicationName: !Ref DeployAPP
            DeploymentGroupName: qytang_aws_flask_deloy_group
            ServiceRoleArn: !GetAtt DeployRole.Arn
            Ec2TagFilters: # 通过标签过滤要部署的EC2
                - Key: Name
                  Value: QYT_AWS_DevOps
                  Type: KEY_AND_VALUE
            DeploymentStyle:
                DeploymentOption: WITHOUT_TRAFFIC_CONTROL
                DeploymentType: IN_PLACE # 对存在的instances进行! 停止,升级和重启!
            DeploymentConfigName: CodeDeployDefault.OneAtATime # 一次一个

    ########################## CodePipeLine ##########################
    PipeLineRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: qytang_codepipeline_role
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service:
                                - codepipeline.amazonaws.com
                        Action:
                            - sts:AssumeRole
            Path: /
    PipelinePolicy:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: qytang_codepipeline_policy
            Roles:
                - !Ref PipeLineRole
            PolicyDocument:
                Statement:
                    -   Action:
                            - iam:PassRole
                        Resource: "*"
                        Effect: Allow
                        Condition:
                            StringEqualsIfExists:
                                iam:PassedToService:
                                    - cloudformation.amazonaws.com
                                    - elasticbeanstalk.amazonaws.com
                                    - ec2.amazonaws.com
                                    - ecs-tasks.amazonaws.com
                    -   Action:
                            - codecommit:CancelUploadArchive
                            - codecommit:GetBranch
                            - codecommit:GetCommit
                            - codecommit:GetRepository
                            - codecommit:GetUploadArchiveStatus
                            - codecommit:UploadArchive
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - codedeploy:CreateDeployment
                            - codedeploy:GetApplication
                            - codedeploy:GetApplicationRevision
                            - codedeploy:GetDeployment
                            - codedeploy:GetDeploymentConfig
                            - codedeploy:RegisterApplicationRevision
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - codestar-connections:UseConnection
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - elasticbeanstalk:*
                            - ec2:*
                            - elasticloadbalancing:*
                            - autoscaling:*
                            - cloudwatch:*
                            - s3:*
                            - sns:*
                            - cloudformation:*
                            - rds:*
                            - sqs:*
                            - ecs:*
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - lambda:InvokeFunction
                            - lambda:ListFunctions
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - opsworks:CreateDeployment
                            - opsworks:DescribeApps
                            - opsworks:DescribeCommands
                            - opsworks:DescribeDeployments
                            - opsworks:DescribeInstances
                            - opsworks:DescribeStacks
                            - opsworks:UpdateApp
                            - opsworks:UpdateStack
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - cloudformation:CreateStack
                            - cloudformation:DeleteStack
                            - cloudformation:DescribeStacks
                            - cloudformation:UpdateStack
                            - cloudformation:CreateChangeSet
                            - cloudformation:DeleteChangeSet
                            - cloudformation:DescribeChangeSet
                            - cloudformation:ExecuteChangeSet
                            - cloudformation:SetStackPolicy
                            - cloudformation:ValidateTemplate
                        Resource: "*"
                        Effect: Allow
                    -   Action:
                            - codebuild:BatchGetBuilds
                            - codebuild:StartBuild
                            - codebuild:BatchGetBuildBatches
                            - codebuild:StartBuildBatch
                        Resource: "*"
                        Effect: Allow
                    -   Effect: Allow
                        Action:
                            - devicefarm:ListProjects
                            - devicefarm:ListDevicePools
                            - devicefarm:GetRun
                            - devicefarm:GetUpload
                            - devicefarm:CreateUpload
                            - devicefarm:ScheduleRun
                        Resource: "*"
                    -   Effect: Allow
                        Action:
                            - servicecatalog:ListProvisioningArtifacts
                            - servicecatalog:CreateProvisioningArtifact
                            - servicecatalog:DescribeProvisioningArtifact
                            - servicecatalog:DeleteProvisioningArtifact
                            - servicecatalog:UpdateProduct
                        Resource: "*"
                    -   Effect: Allow
                        Action:
                            - cloudformation:ValidateTemplate
                        Resource: "*"
                    -   Effect: Allow
                        Action:
                            - ecr:DescribeImages
                        Resource: "*"
                    -   Effect: Allow
                        Action:
                            - states:DescribeExecution
                            - states:DescribeStateMachine
                            - states:StartExecution
                        Resource: "*"
                    -   Effect: Allow
                        Action:
                            - appconfig:StartDeployment
                            - appconfig:StopDeployment
                            - appconfig:GetDeployment
                        Resource: "*"
                Version: '2012-10-17'

    # 保持CodePipline信息的S3桶
    CodePipelineArtifactStoreBucket:
        DeletionPolicy: Retain
        Type: 'AWS::S3::Bucket'
        Properties:
            BucketName: codepipeline-s3-bucket

    # S3桶策略
    CodePipelineArtifactStoreBucketPolicy:
        Type: 'AWS::S3::BucketPolicy'
        Properties:
            Bucket: !Ref CodePipelineArtifactStoreBucket
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Sid: DenyUnEncryptedObjectUploads
                        Effect: Deny
                        Principal: '*'
                        Action: 's3:PutObject'
                        Resource: !Join
                            - ''
                            -   - !GetAtt
                                    - CodePipelineArtifactStoreBucket
                                    - Arn
                                - /*
                        Condition:
                            StringNotEquals:
                                's3:x-amz-server-side-encryption': 'aws:kms'
                    -   Sid: DenyInsecureConnections
                        Effect: Deny
                        Principal: '*'
                        Action: 's3:*'
                        Resource: !Join
                            - ''
                            -   - !GetAtt
                                    - CodePipelineArtifactStoreBucket
                                    - Arn
                                - /*
                        Condition:
                            Bool:
                                'aws:SecureTransport': false
    # CodePipeline配置
    DeployPipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: qytang_aws_devops_pipeline
            RoleArn: !GetAtt PipeLineRole.Arn
#            RoleArn: arn:aws:iam::609047981853:role/service-role/AWSCodePipelineServiceRole-us-east-1-qytang_aws_devops
            ArtifactStore:
                Type: S3
                Location: !Ref CodePipelineArtifactStoreBucket
            Stages:
                - Name: Source # 定义源，CodeCommit仓库
                  Actions:
                    - Name: Source
                      ActionTypeId:
                          Category: Source
                          Owner: AWS
                          Version: 1
                          Provider: CodeCommit
                      OutputArtifacts:
                          -   Name: SourceOutput
                      Configuration:
                          BranchName: master
                          RepositoryName: AWS_DevOps_4_CodePipeline
                          PollForSourceChanges: false
                      RunOrder: 1
                - Name: Deploy # 定义部署
                  Actions:
                    - Name: Deploy
                      InputArtifacts:
                          -   Name: SourceOutput
                      ActionTypeId:
                          Category: Deploy
                          Owner: AWS
                          Version: 1
                          Provider: CodeDeploy
                      Configuration:
                          ApplicationName: !Ref DeployAPP # 应用名字
                          DeploymentGroupName: !Ref DeployGroup # DeploymentGroup名字
                      RunOrder: 1

    ########################## CloudWatch Event触发CodePipeLine ##########################
    AmazonCloudWatchEventRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service:
                                - events.amazonaws.com
                        Action: 'sts:AssumeRole'
            Path: /
            Policies:
                -   PolicyName: cwe-pipeline-execution
                    PolicyDocument:
                        Version: 2012-10-17
                        Statement:
                            -   Effect: Allow
                                Action: 'codepipeline:StartPipelineExecution'
                                Resource: !Join
                                    - ''
                                    -   - 'arn:aws:codepipeline:'
                                        - !Ref 'AWS::Region'
                                        - ':'
                                        - !Ref 'AWS::AccountId'
                                        - ':'
                                        - !Ref DeployPipeline
    # 配置触发CodePipeline的Event
    AmazonCloudWatchEventRule:
        Type: 'AWS::Events::Rule'
        Properties:
            EventPattern:
                source:
                    - aws.codecommit
                detail-type:
                    - CodeCommit Repository State Change
                resources: # CodeCommit Repos
                    - !Join
                        - ''
                        -   - 'arn:aws:codecommit:'
                            - !Ref 'AWS::Region'
                            - ':'
                            - !Ref 'AWS::AccountId'
                            - ':'
                            - AWS_DevOps_4_CodePipeline
                detail:
                    event: # 相关事件
                        - referenceCreated
                        - referenceUpdated
                    referenceType:
                        - branch
                    referenceName:
                        - master
            Targets: # 触发CodePipeline
                -   Arn: !Join
                        - ''
                        -   - 'arn:aws:codepipeline:'
                            - !Ref 'AWS::Region'
                            - ':'
                            - !Ref 'AWS::AccountId'
                            - ':'
                            - !Ref DeployPipeline
                    RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
                    Id: codepipeline-AppPipeline

